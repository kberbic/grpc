syntax = "proto3";

import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validation.proto";

service authService {
  rpc register (Register) returns (UserId) {
    option (google.api.http) = {
      post: "/auth/register",
      body: "*"
    };
  }
  rpc login (Login) returns (Token) {
    option (google.api.http) = {
      post: "/auth/login",
      body: "*"
    };
  }

  rpc profile (google.protobuf.Empty) returns (Profile) {
    option (google.api.http) = {
      get: "/auth/me"
    };
  }
}

message UserId {
  string id = 1 [(validation.required)=true, (validation.max)=255];
}

message Register {
  string name = 1 [(validation.required)=true, (validation.max)=255, (validation.min)=2];
  string email = 2 [(validation.required)=true, (validation.email)=true, (validation.max)=255];
  string password = 3 [(validation.required)=true, (validation.max)=255, (validation.min)=8];
}

message Profile {
  string id = 1 [(validation.required)=true, (validation.max)=255];
  string name = 2 [(validation.required)=true, (validation.max)=255, (validation.min)=2];
  string email = 3 [(validation.required)=true, (validation.max)=255];
}

message Login {
  string email = 1 [(validation.required)=true, (validation.max)=255];
  string password = 2 [(validation.required)=true, (validation.max)=255, (validation.min)=8];
}

message Token {
  string id = 1 [(validation.required)=true];
  string token = 2 [(validation.required)=true];
}

